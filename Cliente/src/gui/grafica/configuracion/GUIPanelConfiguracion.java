package gui.grafica.configuracion;

import gestorDeConfiguracion.ControlConfiguracionCliente;
import gestorDeConfiguracion.ObservadorControlConfiguracionCliente;
import gestorDeConfiguracion.PropiedadCliente;
import java.util.Properties;

/**
 * Panel que se encarga de la configuración de la aplicación.
 * El panel implementa la interfaz "observador sobre el objeto 
 * ControlConfiguracionCliente", ya que dicho objeto es el que gestiona la configuración
 * del cliente (es la parte del Modelo en el patrón MVC). El Panel es la parte de la
 * vista. 
 *
 * @author F. Javier Sánchez Pardo
 * 
 */


public class GUIPanelConfiguracion extends javax.swing.JPanel implements ObservadorControlConfiguracionCliente{

    /**
     * Constructor de la clase PanelConfiguración.
     * @param oControlConfiguracionCliente Objeto ControlConfiguracionCliente.
     *        Mediante este parametro la Vista (este JPanel) tiene una referencia al Modelo
     *        (el objeto ControlConfiguracionCliente) y le permite pedir información 
     *        al Modelo para actualizarse convenientemente.
     * 
     */
    public GUIPanelConfiguracion(ControlConfiguracionCliente oControlConfiguracionCliente) {
        _objetoModelo = oControlConfiguracionCliente;
        _objetoControlador = new ControladorPanelConfiguracion(_objetoModelo, this);
        initComponents();
        //Pongo al objeto controlador a "escuchar" al boton.
        _btnAceptar.addActionListener(_objetoControlador);
        //Pongo al objeto controlador a "escuchar" al boton.
        _btnDeshacer.addActionListener(_objetoControlador);        
        //Pongo al objeto controlador a "escuchar" al boton.
        _btnRestaurar.addActionListener(_objetoControlador);
        inicializarCampos (_objetoModelo.obtenerConfiguracion());        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField4 = new javax.swing.JTextField();
        _panelPrincipal = new javax.swing.JPanel();
        _panelConexion = new javax.swing.JPanel();
        _lblNumDescargasSim = new javax.swing.JLabel();
        _txtNumDescargasSim = new javax.swing.JTextField();
        _lblLimVelocidadSubida = new javax.swing.JLabel();
        _txtLimVelocidadSubida = new javax.swing.JTextField();
        _lblLimVelocidadBajada = new javax.swing.JLabel();
        _txtLimVelocidadBajada = new javax.swing.JTextField();
        _lblPuerto = new javax.swing.JLabel();
        _txtPuerto = new javax.swing.JTextField();
        _panelServidor = new javax.swing.JPanel();
        _lblIPServidor = new javax.swing.JLabel();
        _txtIPServidor = new javax.swing.JTextField();
        _lblPuertoServidor = new javax.swing.JLabel();
        _txtPuertoServidor = new javax.swing.JTextField();
        _lblNombreServidor = new javax.swing.JLabel();
        _txtNombreServidor = new javax.swing.JTextField();
        _lblDescripServidor = new javax.swing.JLabel();
        _txtDescripServidor = new javax.swing.JTextField();
        _panelBotones = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        _btnAceptar = new javax.swing.JButton();
        _btnDeshacer = new javax.swing.JButton();
        _btnRestaurar = new javax.swing.JButton();
        _panelUsuario = new javax.swing.JPanel();
        _lblNombreUsuario = new javax.swing.JLabel();
        _txtNombreUsuario = new javax.swing.JTextField();
        _panelDirectorios = new javax.swing.JPanel();
        _lblDirLlegada = new javax.swing.JLabel();
        _txtDirLlegada = new javax.swing.JTextField();
        _lblDirCompartidos = new javax.swing.JLabel();
        _txtDirCompartidos = new javax.swing.JTextField();

        jTextField4.setText("jTextField1");

        setLayout(new java.awt.GridLayout(1, 0));

        _panelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        _panelPrincipal.setLayout(null);

        _panelConexion.setBorder(javax.swing.BorderFactory.createTitledBorder("Conexión"));
        _panelConexion.setLayout(new java.awt.GridBagLayout());

        _lblNumDescargasSim.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblNumDescargasSim.setText("Nº de Descargas Simultaneas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelConexion.add(_lblNumDescargasSim, gridBagConstraints);

        _txtNumDescargasSim.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelConexion.add(_txtNumDescargasSim, gridBagConstraints);

        _lblLimVelocidadSubida.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblLimVelocidadSubida.setText("Limite de Velocidad de subida (KB/s):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelConexion.add(_lblLimVelocidadSubida, gridBagConstraints);

        _txtLimVelocidadSubida.setColumns(5);
        _txtLimVelocidadSubida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtLimVelocidadSubidaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelConexion.add(_txtLimVelocidadSubida, gridBagConstraints);

        _lblLimVelocidadBajada.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblLimVelocidadBajada.setText("Limite de Velocidad de bajada (KB/s):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelConexion.add(_lblLimVelocidadBajada, gridBagConstraints);

        _txtLimVelocidadBajada.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelConexion.add(_txtLimVelocidadBajada, gridBagConstraints);

        _lblPuerto.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblPuerto.setText("Puerto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelConexion.add(_lblPuerto, gridBagConstraints);

        _txtPuerto.setColumns(5);
        _txtPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtPuertoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelConexion.add(_txtPuerto, gridBagConstraints);

        _panelPrincipal.add(_panelConexion);
        _panelConexion.setBounds(8, 5, 340, 160);

        _panelServidor.setBorder(javax.swing.BorderFactory.createTitledBorder("Servidor"));
        _panelServidor.setLayout(new java.awt.GridBagLayout());

        _lblIPServidor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblIPServidor.setText("IP Servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelServidor.add(_lblIPServidor, gridBagConstraints);

        _txtIPServidor.setColumns(15);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelServidor.add(_txtIPServidor, gridBagConstraints);

        _lblPuertoServidor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblPuertoServidor.setText("Puerto Servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelServidor.add(_lblPuertoServidor, gridBagConstraints);

        _txtPuertoServidor.setColumns(4);
        _txtPuertoServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtPuertoServidorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelServidor.add(_txtPuertoServidor, gridBagConstraints);

        _lblNombreServidor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblNombreServidor.setText("Nombre Servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelServidor.add(_lblNombreServidor, gridBagConstraints);

        _txtNombreServidor.setColumns(25);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelServidor.add(_txtNombreServidor, gridBagConstraints);

        _lblDescripServidor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblDescripServidor.setText("Descripcion Servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelServidor.add(_lblDescripServidor, gridBagConstraints);

        _txtDescripServidor.setColumns(40);
        _txtDescripServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtDescripServidorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelServidor.add(_txtDescripServidor, gridBagConstraints);

        _panelPrincipal.add(_panelServidor);
        _panelServidor.setBounds(10, 170, 680, 150);

        _panelBotones.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        _panelBotones.add(jPanel3, new java.awt.GridBagConstraints());

        _btnAceptar.setText("Aceptar");
        _panelBotones.add(_btnAceptar, new java.awt.GridBagConstraints());

        _btnDeshacer.setText("Deshacer cambios");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        _panelBotones.add(_btnDeshacer, gridBagConstraints);

        _btnRestaurar.setText("Config. defecto");
        _panelBotones.add(_btnRestaurar, new java.awt.GridBagConstraints());

        _panelPrincipal.add(_panelBotones);
        _panelBotones.setBounds(10, 460, 680, 60);

        _panelUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuario"));
        _panelUsuario.setLayout(new java.awt.GridBagLayout());

        _lblNombreUsuario.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblNombreUsuario.setText("Nombre usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelUsuario.add(_lblNombreUsuario, gridBagConstraints);

        _txtNombreUsuario.setColumns(18);
        _txtNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtNombreUsuarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelUsuario.add(_txtNombreUsuario, gridBagConstraints);

        _panelPrincipal.add(_panelUsuario);
        _panelUsuario.setBounds(360, 10, 330, 150);

        _panelDirectorios.setBorder(javax.swing.BorderFactory.createTitledBorder("Directorios"));
        _panelDirectorios.setLayout(new java.awt.GridBagLayout());

        _lblDirLlegada.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblDirLlegada.setText("Directorio de llegada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelDirectorios.add(_lblDirLlegada, gridBagConstraints);

        _txtDirLlegada.setColumns(40);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelDirectorios.add(_txtDirLlegada, gridBagConstraints);

        _lblDirCompartidos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        _lblDirCompartidos.setText("Directorio de compartidos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        _panelDirectorios.add(_lblDirCompartidos, gridBagConstraints);

        _txtDirCompartidos.setColumns(40);
        _txtDirCompartidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtDirCompartidosActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        _panelDirectorios.add(_txtDirCompartidos, gridBagConstraints);

        _panelPrincipal.add(_panelDirectorios);
        _panelDirectorios.setBounds(10, 330, 680, 120);

        add(_panelPrincipal);
    }// </editor-fold>//GEN-END:initComponents

private void _txtLimVelocidadSubidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtLimVelocidadSubidaActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtLimVelocidadSubidaActionPerformed

private void _txtPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtPuertoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtPuertoActionPerformed

private void _txtPuertoServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtPuertoServidorActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtPuertoServidorActionPerformed

private void _txtDescripServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtDescripServidorActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtDescripServidorActionPerformed

private void _txtDirCompartidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtDirCompartidosActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtDirCompartidosActionPerformed

private void _txtNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtNombreUsuarioActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__txtNombreUsuarioActionPerformed

    // ATRIBUTOS

    /**
     * En la Vista (PATRÓN MVC) se guarda una referencia al Modelo que en este caso es 
     * un objeto ControlConfiguracionCliente y una referencia al Controlador que en
     * este caso es ControladorPanelConfiguracion.
     */
    private ControlConfiguracionCliente _objetoModelo;
    private ControladorPanelConfiguracion _objetoControlador;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _btnAceptar;
    private javax.swing.JButton _btnDeshacer;
    private javax.swing.JButton _btnRestaurar;
    private javax.swing.JLabel _lblDescripServidor;
    private javax.swing.JLabel _lblDirCompartidos;
    private javax.swing.JLabel _lblDirLlegada;
    private javax.swing.JLabel _lblIPServidor;
    private javax.swing.JLabel _lblLimVelocidadBajada;
    private javax.swing.JLabel _lblLimVelocidadSubida;
    private javax.swing.JLabel _lblNombreServidor;
    private javax.swing.JLabel _lblNombreUsuario;
    private javax.swing.JLabel _lblNumDescargasSim;
    private javax.swing.JLabel _lblPuerto;
    private javax.swing.JLabel _lblPuertoServidor;
    private javax.swing.JPanel _panelBotones;
    private javax.swing.JPanel _panelConexion;
    private javax.swing.JPanel _panelDirectorios;
    private javax.swing.JPanel _panelPrincipal;
    private javax.swing.JPanel _panelServidor;
    private javax.swing.JPanel _panelUsuario;
    private javax.swing.JTextField _txtDescripServidor;
    private javax.swing.JTextField _txtDirCompartidos;
    private javax.swing.JTextField _txtDirLlegada;
    private javax.swing.JTextField _txtIPServidor;
    private javax.swing.JTextField _txtLimVelocidadBajada;
    private javax.swing.JTextField _txtLimVelocidadSubida;
    private javax.swing.JTextField _txtNombreServidor;
    private javax.swing.JTextField _txtNombreUsuario;
    private javax.swing.JTextField _txtNumDescargasSim;
    private javax.swing.JTextField _txtPuerto;
    private javax.swing.JTextField _txtPuertoServidor;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    /**
     * Este metodo inicializa los campos del panel con los valores
     * contenidos en el objeto properties.
     */
    public void inicializarCampos(Properties properties){
        _txtNumDescargasSim.setText(properties.getProperty(PropiedadCliente.NUM_DESCARGAS_SIM.obtenerLiteral()));
        _txtLimVelocidadSubida.setText(properties.getProperty(PropiedadCliente.LIM_VELOCIDAD_SUBIDA.obtenerLiteral()));
        _txtLimVelocidadBajada.setText(properties.getProperty(PropiedadCliente.LIM_VELOCIDAD_BAJADA.obtenerLiteral()));
        _txtPuerto.setText(properties.getProperty(PropiedadCliente.PUERTO.obtenerLiteral()));
        _txtDirLlegada.setText(properties.getProperty(PropiedadCliente.DIR_LLEGADA.obtenerLiteral()));
        _txtDirCompartidos.setText(properties.getProperty(PropiedadCliente.DIR_COMPARTIDOS.obtenerLiteral()));
        _txtIPServidor.setText(properties.getProperty(PropiedadCliente.IP_SERVIDOR.obtenerLiteral()));
        _txtPuertoServidor.setText(properties.getProperty(PropiedadCliente.PUERTO_SERVIDOR.obtenerLiteral()));
        _txtNombreServidor.setText(properties.getProperty(PropiedadCliente.NOMBRE_SERVIDOR.obtenerLiteral()));
        _txtDescripServidor.setText(properties.getProperty(PropiedadCliente.DESCRIP_SERVIDOR.obtenerLiteral()));
        _txtNombreUsuario.setText(properties.getProperty(PropiedadCliente.NOMBRE_USUARIO.obtenerLiteral()));
    }
    
    /**
     * Este metodo (implementacion de la interfaz ObservadorControlConfiguracionCliente) permite 
     * reflejar en la Vista (este panel) los cambios que se han producido en el Modelo (objeto 
     * ControlConfiguracionCliente). En el parametro propiedades están las propiedades
     * que han cambiado de valor (no tienen porqué haber cambiado todas). EN ESTE CASO NO
     * HACE FALTA tratar de manera diferenciada cada posible cambio: se muestra en el panel
     * el contenido del objeto entero.
     * @param obj Objeto ControlConfiguracionCliente que almacena la configuracion
     * @param propiedades Conjunto de propiedades que han cambiado en el objeto anterior.
     */
    @Override
    public void cambioEnPropiedades(ControlConfiguracionCliente obj, Properties propiedades) {
        inicializarCampos (_objetoModelo.obtenerConfiguracion()); 
    }
    
    //
    //Metodos auxiliares que devuelven los valores de los controles de entrada
    //
    public String obtenerNumDescargasSim(){
        return _txtNumDescargasSim.getText();
    }
    
    public String obtenerLimVelocidadSubida(){
        return _txtLimVelocidadSubida.getText();
    }
    
    public String obtenerLimVelocidadBajada(){
        return _txtLimVelocidadBajada.getText();
    }

    public String obtenerPuerto(){
        return _txtPuerto.getText();
    }

    public String obtenerDirLlegada(){
        return _txtDirLlegada.getText();
    }

    public String obtenerDirCompartidos(){
        return _txtDirCompartidos.getText();
    }

    public String obtenerIPServidor(){
        return _txtIPServidor.getText();
    }

    public String obtenerPuertoServidor(){
        return _txtPuertoServidor.getText();
    }

    public String obtenerNombreServidor(){
        return _txtNombreServidor.getText();
    }

    public String obtenerDescripServidor(){
        return _txtDescripServidor.getText();
    }

    public String obtenerNombreUsuario(){
        return _txtNombreUsuario.getText();
    }

    //
    //Metodos auxiliares que devuelven referencias a los botones
    //
    public Object obtenerBotonAceptar(){
        return _btnAceptar;
    }
    
    public Object obtenerBotonDeshacer(){
        return _btnDeshacer;
    }
    
    public Object obtenerBotonRestaurar(){
        return _btnRestaurar;
    }

}
